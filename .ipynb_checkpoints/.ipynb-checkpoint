{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.cluster import KMeans\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "df=pd.read_excel('data\\combined.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "dong        object\n",
      "pop          int64\n",
      "workpop      int64\n",
      "facscore     int64\n",
      "dtype: object\n"
     ]
    }
   ],
   "source": [
    "df['pop'] = pd.to_numeric(df['pop'])\n",
    "df['workpop'] = pd.to_numeric(df['workpop'])\n",
    "print(df.dtypes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[29081, 1461, 13],\n",
       "       [358, 3433, 11],\n",
       "       [6675, 4771, 14],\n",
       "       [4833, 1279, 4],\n",
       "       [2040, 2937, 21],\n",
       "       [5664, 910, 4],\n",
       "       [6045, 7133, 5],\n",
       "       [41606, 3490, 111],\n",
       "       [3346, 5495, 1],\n",
       "       [3812, 2490, 14],\n",
       "       [5932, 1689, 13],\n",
       "       [12113, 1393, 34],\n",
       "       [29676, 1642, 21],\n",
       "       [6740, 16635, 57],\n",
       "       [27897, 1731, 11],\n",
       "       [8818, 7620, 102],\n",
       "       [4407, 18263, 30],\n",
       "       [20480, 3212, 125],\n",
       "       [2239, 1382, 3],\n",
       "       [25678, 8689, 28],\n",
       "       [32040, 2660, 73],\n",
       "       [7773, 2112, 36],\n",
       "       [19660, 6919, 257],\n",
       "       [10739, 2203, 42],\n",
       "       [7786, 6980, 37],\n",
       "       [18583, 1439, 6],\n",
       "       [6949, 2017, 31],\n",
       "       [19924, 13994, 70],\n",
       "       [4552, 4943, 28],\n",
       "       [11457, 34839, 200],\n",
       "       [5509, 16357, 1],\n",
       "       [21092, 8363, 38],\n",
       "       [5140, 10179, 7],\n",
       "       [3765, 23014, 51],\n",
       "       [23610, 57177, 44],\n",
       "       [6615, 4644, 1],\n",
       "       [19364, 6473, 72],\n",
       "       [23524, 4627, 95],\n",
       "       [5224, 8702, 43],\n",
       "       [6432, 42960, 30],\n",
       "       [13206, 18126, 6],\n",
       "       [17238, 12420, 6],\n",
       "       [4884, 18567, 98],\n",
       "       [7171, 1309, 36],\n",
       "       [1772, 1423, 31],\n",
       "       [1675, 2672, 40],\n",
       "       [1893, 2009, 28],\n",
       "       [2758, 694, 10],\n",
       "       [3378, 1254, 23],\n",
       "       [25289, 1374, 209],\n",
       "       [15497, 5112, 8],\n",
       "       [5952, 2343, 45],\n",
       "       [4934, 1602, 48],\n",
       "       [4047, 2218, 30],\n",
       "       [8580, 3593, 9],\n",
       "       [3621, 6235, 6],\n",
       "       [5952, 4460, 25],\n",
       "       [4241, 9073, 15]], dtype=object)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_points=df.values[:,1:]\n",
    "data_points"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\user\\Anaconda3\\lib\\site-packages\\sklearn\\utils\\validation.py:595: DataConversionWarning: Data with input dtype object was converted to float64 by MinMaxScaler.\n",
      "  warnings.warn(msg, DataConversionWarning)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.preprocessing import MinMaxScaler\n",
    "\n",
    "mms = MinMaxScaler()\n",
    "mms.fit(data_points)\n",
    "data_transformed = mms.transform(data_points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "Sum_of_squared_distances = []\n",
    "K = range(1,15)\n",
    "for k in K:\n",
    "    km = KMeans(n_clusters=k)\n",
    "    km = km.fit(data_transformed)\n",
    "    Sum_of_squared_distances.append(km.inertia_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(K, Sum_of_squared_distances, 'bx-')\n",
    "plt.xlabel('k')\n",
    "plt.ylabel('Sum_of_squared_distances')\n",
    "plt.title('Elbow Method For Optimal k')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "kmeans=KMeans(n_clusters=4).fit(data_points)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 3, 0, 1, 3, 0, 1, 0, 0, 1,\n",
       "       0, 1, 1, 0, 1, 0, 1, 2, 3, 0, 1, 3, 2, 1, 0, 0, 1, 2, 3, 0, 3, 1,\n",
       "       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1])"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kmeans.labels_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['cluster_id']=kmeans.labels_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>dong</th>\n",
       "      <th>pop</th>\n",
       "      <th>workpop</th>\n",
       "      <th>facscore</th>\n",
       "      <th>cluster_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>가음정동</td>\n",
       "      <td>29081</td>\n",
       "      <td>1461</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>가포동</td>\n",
       "      <td>358</td>\n",
       "      <td>3433</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>경화동</td>\n",
       "      <td>6675</td>\n",
       "      <td>4771</td>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>교방동</td>\n",
       "      <td>4833</td>\n",
       "      <td>1279</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>구산면</td>\n",
       "      <td>2040</td>\n",
       "      <td>2937</td>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>구암1동</td>\n",
       "      <td>5664</td>\n",
       "      <td>910</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>구암2동</td>\n",
       "      <td>6045</td>\n",
       "      <td>7133</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>내서읍</td>\n",
       "      <td>41606</td>\n",
       "      <td>3490</td>\n",
       "      <td>111</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>노산동</td>\n",
       "      <td>3346</td>\n",
       "      <td>5495</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>대산면</td>\n",
       "      <td>3812</td>\n",
       "      <td>2490</td>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>덕산동</td>\n",
       "      <td>5932</td>\n",
       "      <td>1689</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>동읍</td>\n",
       "      <td>12113</td>\n",
       "      <td>1393</td>\n",
       "      <td>34</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>명곡동</td>\n",
       "      <td>29676</td>\n",
       "      <td>1642</td>\n",
       "      <td>21</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>문화동</td>\n",
       "      <td>6740</td>\n",
       "      <td>16635</td>\n",
       "      <td>57</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>반송동</td>\n",
       "      <td>27897</td>\n",
       "      <td>1731</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>반월중앙동</td>\n",
       "      <td>8818</td>\n",
       "      <td>7620</td>\n",
       "      <td>102</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>병암동</td>\n",
       "      <td>4407</td>\n",
       "      <td>18263</td>\n",
       "      <td>30</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>봉림동</td>\n",
       "      <td>20480</td>\n",
       "      <td>3212</td>\n",
       "      <td>125</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>봉암동</td>\n",
       "      <td>2239</td>\n",
       "      <td>1382</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>북면</td>\n",
       "      <td>25678</td>\n",
       "      <td>8689</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>사파동</td>\n",
       "      <td>32040</td>\n",
       "      <td>2660</td>\n",
       "      <td>73</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>산호동</td>\n",
       "      <td>7773</td>\n",
       "      <td>2112</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>상남동</td>\n",
       "      <td>19660</td>\n",
       "      <td>6919</td>\n",
       "      <td>257</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>석동</td>\n",
       "      <td>10739</td>\n",
       "      <td>2203</td>\n",
       "      <td>42</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>석전동</td>\n",
       "      <td>7786</td>\n",
       "      <td>6980</td>\n",
       "      <td>37</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>성주동</td>\n",
       "      <td>18583</td>\n",
       "      <td>1439</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>양덕1동</td>\n",
       "      <td>6949</td>\n",
       "      <td>2017</td>\n",
       "      <td>31</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>양덕2동</td>\n",
       "      <td>19924</td>\n",
       "      <td>13994</td>\n",
       "      <td>70</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>여좌동</td>\n",
       "      <td>4552</td>\n",
       "      <td>4943</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>오동동</td>\n",
       "      <td>11457</td>\n",
       "      <td>34839</td>\n",
       "      <td>200</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>완월동</td>\n",
       "      <td>5509</td>\n",
       "      <td>16357</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>용지동</td>\n",
       "      <td>21092</td>\n",
       "      <td>8363</td>\n",
       "      <td>38</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>웅남동</td>\n",
       "      <td>5140</td>\n",
       "      <td>10179</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>웅동1동</td>\n",
       "      <td>3765</td>\n",
       "      <td>23014</td>\n",
       "      <td>51</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>웅동2동</td>\n",
       "      <td>23610</td>\n",
       "      <td>57177</td>\n",
       "      <td>44</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>웅천동</td>\n",
       "      <td>6615</td>\n",
       "      <td>4644</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>월영동</td>\n",
       "      <td>19364</td>\n",
       "      <td>6473</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>의창동</td>\n",
       "      <td>23524</td>\n",
       "      <td>4627</td>\n",
       "      <td>95</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>이동</td>\n",
       "      <td>5224</td>\n",
       "      <td>8702</td>\n",
       "      <td>43</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>자산동</td>\n",
       "      <td>6432</td>\n",
       "      <td>42960</td>\n",
       "      <td>30</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>자은동</td>\n",
       "      <td>13206</td>\n",
       "      <td>18126</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>중앙동(진해)</td>\n",
       "      <td>17238</td>\n",
       "      <td>12420</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>중앙동(성산)</td>\n",
       "      <td>4884</td>\n",
       "      <td>18567</td>\n",
       "      <td>98</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>진동면</td>\n",
       "      <td>7171</td>\n",
       "      <td>1309</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>진북면</td>\n",
       "      <td>1772</td>\n",
       "      <td>1423</td>\n",
       "      <td>31</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>진전면</td>\n",
       "      <td>1675</td>\n",
       "      <td>2672</td>\n",
       "      <td>40</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>충무동</td>\n",
       "      <td>1893</td>\n",
       "      <td>2009</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>태백동</td>\n",
       "      <td>2758</td>\n",
       "      <td>694</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>태평동</td>\n",
       "      <td>3378</td>\n",
       "      <td>1254</td>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>팔룡동</td>\n",
       "      <td>25289</td>\n",
       "      <td>1374</td>\n",
       "      <td>209</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>풍호동</td>\n",
       "      <td>15497</td>\n",
       "      <td>5112</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>합성1동</td>\n",
       "      <td>5952</td>\n",
       "      <td>2343</td>\n",
       "      <td>45</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>합성2동</td>\n",
       "      <td>4934</td>\n",
       "      <td>1602</td>\n",
       "      <td>48</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>합포동</td>\n",
       "      <td>4047</td>\n",
       "      <td>2218</td>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>현동</td>\n",
       "      <td>8580</td>\n",
       "      <td>3593</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>회성동</td>\n",
       "      <td>3621</td>\n",
       "      <td>6235</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>회원1동</td>\n",
       "      <td>5952</td>\n",
       "      <td>4460</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>회원2동</td>\n",
       "      <td>4241</td>\n",
       "      <td>9073</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       dong    pop  workpop  facscore  cluster_id\n",
       "0      가음정동  29081     1461        13           0\n",
       "1       가포동    358     3433        11           1\n",
       "2       경화동   6675     4771        14           1\n",
       "3       교방동   4833     1279         4           1\n",
       "4       구산면   2040     2937        21           1\n",
       "5      구암1동   5664      910         4           1\n",
       "6      구암2동   6045     7133         5           1\n",
       "7       내서읍  41606     3490       111           0\n",
       "8       노산동   3346     5495         1           1\n",
       "9       대산면   3812     2490        14           1\n",
       "10      덕산동   5932     1689        13           1\n",
       "11       동읍  12113     1393        34           1\n",
       "12      명곡동  29676     1642        21           0\n",
       "13      문화동   6740    16635        57           3\n",
       "14      반송동  27897     1731        11           0\n",
       "15    반월중앙동   8818     7620       102           1\n",
       "16      병암동   4407    18263        30           3\n",
       "17      봉림동  20480     3212       125           0\n",
       "18      봉암동   2239     1382         3           1\n",
       "19       북면  25678     8689        28           0\n",
       "20      사파동  32040     2660        73           0\n",
       "21      산호동   7773     2112        36           1\n",
       "22      상남동  19660     6919       257           0\n",
       "23       석동  10739     2203        42           1\n",
       "24      석전동   7786     6980        37           1\n",
       "25      성주동  18583     1439         6           0\n",
       "26     양덕1동   6949     2017        31           1\n",
       "27     양덕2동  19924    13994        70           0\n",
       "28      여좌동   4552     4943        28           1\n",
       "29      오동동  11457    34839       200           2\n",
       "30      완월동   5509    16357         1           3\n",
       "31      용지동  21092     8363        38           0\n",
       "32      웅남동   5140    10179         7           1\n",
       "33     웅동1동   3765    23014        51           3\n",
       "34     웅동2동  23610    57177        44           2\n",
       "35      웅천동   6615     4644         1           1\n",
       "36      월영동  19364     6473        72           0\n",
       "37      의창동  23524     4627        95           0\n",
       "38       이동   5224     8702        43           1\n",
       "39      자산동   6432    42960        30           2\n",
       "40      자은동  13206    18126         6           3\n",
       "41  중앙동(진해)  17238    12420         6           0\n",
       "42  중앙동(성산)   4884    18567        98           3\n",
       "43      진동면   7171     1309        36           1\n",
       "44      진북면   1772     1423        31           1\n",
       "45      진전면   1675     2672        40           1\n",
       "46      충무동   1893     2009        28           1\n",
       "47      태백동   2758      694        10           1\n",
       "48      태평동   3378     1254        23           1\n",
       "49      팔룡동  25289     1374       209           0\n",
       "50      풍호동  15497     5112         8           0\n",
       "51     합성1동   5952     2343        45           1\n",
       "52     합성2동   4934     1602        48           1\n",
       "53      합포동   4047     2218        30           1\n",
       "54       현동   8580     3593         9           1\n",
       "55      회성동   3621     6235         6           1\n",
       "56     회원1동   5952     4460        25           1\n",
       "57     회원2동   4241     9073        15           1"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[29081, 41606, 29676, 27897, 20480, 25678, 32040, 19660, 18583, 19924, 21092, 19364, 23524, 17238, 25289, 15497]\n",
      "[1461, 3490, 1642, 1731, 3212, 8689, 2660, 6919, 1439, 13994, 8363, 6473, 4627, 12420, 1374, 5112]\n",
      "[13, 111, 21, 11, 125, 28, 73, 257, 6, 70, 38, 72, 95, 6, 209, 8]\n"
     ]
    }
   ],
   "source": [
    "from mpl_toolkits.mplot3d import Axes3D\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "x0=[]\n",
    "y0=[]\n",
    "z0=[]\n",
    "\n",
    "x1=[]\n",
    "y1=[]\n",
    "z1=[]\n",
    "\n",
    "x2=[]\n",
    "y2=[]\n",
    "z2=[]\n",
    "\n",
    "x3=[]\n",
    "y3=[]\n",
    "z3=[]\n",
    "\n",
    "for i in range(len(df)):\n",
    "    if df['cluster_id'][i]==0:\n",
    "        x0.append(df['pop'][i])\n",
    "        y0.append(df['workpop'][i])\n",
    "        z0.append(df['facscore'][i])\n",
    "    \n",
    "    elif df['cluster_id'][i]==1:\n",
    "        x1.append(df['pop'][i])\n",
    "        y1.append(df['workpop'][i])\n",
    "        z1.append(df['facscore'][i])\n",
    "        \n",
    "    elif df['cluster_id'][i]==2:\n",
    "        x2.append(df['pop'][i])\n",
    "        y2.append(df['workpop'][i])\n",
    "        z2.append(df['facscore'][i])\n",
    "    \n",
    "    else:\n",
    "        x3.append(df['pop'][i])\n",
    "        y3.append(df['workpop'][i])\n",
    "        z3.append(df['facscore'][i])\n",
    "\n",
    "print(x0)\n",
    "print(y0)\n",
    "print(z0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "\n",
    "\n",
    "ax.scatter(x0, y0, z0, c='r')\n",
    "ax.scatter(x1, y1, z1, c='b')\n",
    "ax.scatter(x2, y2, z2, c='g')\n",
    "ax.scatter(x3, y3, z3, c='c')\n",
    "\n",
    "ax.set_xlabel('pop')\n",
    "ax.set_ylabel('work')\n",
    "ax.set_zlabel('fac')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
